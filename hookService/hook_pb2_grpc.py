# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import hook_pb2 as hook__pb2


class webHookStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.hookCreate = channel.unary_unary(
        '/hook.webHook/hookCreate',
        request_serializer=hook__pb2.User.SerializeToString,
        response_deserializer=hook__pb2.Response.FromString,
        )
    self.hookUpdate = channel.unary_unary(
        '/hook.webHook/hookUpdate',
        request_serializer=hook__pb2.User.SerializeToString,
        response_deserializer=hook__pb2.Response.FromString,
        )
    self.hookGet = channel.unary_unary(
        '/hook.webHook/hookGet',
        request_serializer=hook__pb2.Hook.SerializeToString,
        response_deserializer=hook__pb2.Response.FromString,
        )


class webHookServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def hookCreate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hookUpdate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hookGet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_webHookServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'hookCreate': grpc.unary_unary_rpc_method_handler(
          servicer.hookCreate,
          request_deserializer=hook__pb2.User.FromString,
          response_serializer=hook__pb2.Response.SerializeToString,
      ),
      'hookUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.hookUpdate,
          request_deserializer=hook__pb2.User.FromString,
          response_serializer=hook__pb2.Response.SerializeToString,
      ),
      'hookGet': grpc.unary_unary_rpc_method_handler(
          servicer.hookGet,
          request_deserializer=hook__pb2.Hook.FromString,
          response_serializer=hook__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hook.webHook', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
